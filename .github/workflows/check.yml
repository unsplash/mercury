# The default GitHub runner image comes with a bunch of software preinstalled.
# Typically this doesn't matter, however with Cargo it appears to interfere,
# hence the `rm -rf ~/.cargo/` steps.

name: Check

on:
  push:

jobs:
  validate:
    name: Validate Nix
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v21
      - run: nix flake check

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rm -rf ~/.cargo/
      - uses: cachix/install-nix-action@v21
      - run: nix develop -c cargo check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rm -rf ~/.cargo/
      - uses: cachix/install-nix-action@v21
      - run: nix develop -c cargo test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rm -rf ~/.cargo/
      - uses: cachix/install-nix-action@v21
      # See: https://github.com/rust-lang/rust-clippy/issues/1209
      - run: RUSTFLAGS="-D warnings" nix develop -c cargo clippy --all-targets

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rm -rf ~/.cargo/
      - uses: cachix/install-nix-action@v21
      - run: nix develop -c cargo fmt --check
